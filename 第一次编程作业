a，b，c，d=map(str，put().split())
e，f，g=map(str，put().split())
h，i，j=map(str，put().split())
E，r=map(str，put().splp())
S1，S2，S3，S4，S5，S6，S7，S8，S9，S10=map
n=int(0)
X=int(0)
y=int(0)
Z=int(0)
q=int(0)
德夫 QQQ(D)：
    如果 莱恩(D)==1:
        回归 1
    如果 莱恩(D)==2:
        回归 3
    如果 莱恩(D)==3:
        回归 4
为 p 在……里面 范围(0，QQQ(D))：
    如果 D[p]==‘十’：
        d=d.替换(D)[p],'10')
    如果 D[p]==‘九’：
        d=d.替换(D)[p],'9')
    如果 D[p]==‘八’：
        d=d.替换(D)[p],'8')
    如果 D[p]==‘七’：
        d=d.替换(D)[p],'7')
    如果 D[p]==‘六’：
        d=d.替换(D)[p],'6')
    如果 D[p]==‘五’：
        d=d.替换(D)[p],'5')
    如果 D[p]==‘四’：
        d=d.替换(D)[p],'4') 
    如果 D[p]==‘三’：
        d=d.替换(D)[p],'3')
    如果 D[p]==‘二’：
        d=d.替换(D)[p],'2')
    如果 D[p]==‘一’：
        d=d.替换(D)[p],'1')
    如果 D[p]==‘零’：
        d=d.替换(D)[p],'0')
印刷(D)
如果 莱恩(D)==4:
    X=int(D)[0])*10+int(D)[1])+int(D)[2])+(int(D)[3])-1)
如果 莱恩(D)==3:
    X=int(D)[0])*10+int(D)[1])+int(D)[2])
如果 莱恩(D)==2:
    X=int(D)[0])*10
如果 莱恩(D)==1:
    X=int(D)[0])   
为 s 在……里面 范围(0，QQQ(G))：
    如果 g[s]==‘十’：
        G=g.替换(G)[s],'10')
    如果 g[s]==‘九’：
        G=g.替换(G)[s],'9')
    如果 g[s]==‘八’：
        G=g.替换(G)[s],'8')
    如果 g[s]==‘七’：
        G=g.替换(G)[s],'7')
    如果 g[s]==‘六’：
        G=g.替换(G)[s],'6')
    如果 g[s]==‘五’：
        G=g.替换(G)[s],'5')
    如果 g[s]==‘四’：
        G=g.替换(G)[s],'4') 
    如果 g[s]==‘三’：
        G=g.替换(G)[s],'3')
    如果 g[s]==‘二’：
        G=g.替换(G)[s],'2')
    如果 g[s]==‘一’：
        G=g.替换(G)[s],'1')
    如果 g[s]==‘零’：
        G=g.替换(G)[s],'0')
如果 莱恩(G)==4:
    y=int(G)[0])*10+int(G)[1])+int(G)[2])+(int(G)[3])-1)
如果 莱恩(G)==3:
    y=int(G)[0])*10+int(G)[1])+int(G)[2])
如果 莱恩(G)==2:
    y=int(G)[0])*10
如果 莱恩(G)==1:
    y=int(G)[0])
为 r 在……里面 范围(0，QQQ(J))：
    如果 J[r]==‘十’：
        j=j.替换(J)[r],'10')
    如果 J[r]==‘九’：
        j=j.替换(J)[r],'9')
    如果 J[r]==‘八’：
        j=j.替换(J)[r],'8')
    如果 D[p]==‘七’：
        j=j.替换(J)[r],'7')
    如果 J[r]==‘六’：
        j=j.替换(J)[r],'6')
    如果 J[r]==‘五’：
        j=j.替换(J)[r],'5')
    如果 J[r]==‘四’：
        j=j.替换(J)[r],'4') 
    如果 J[r]==‘三’：
        j=j.替换(J)[r],'3')
    如果 J[r]==‘二’：
        j=j.替换(J)[r],'2')
    如果 J[r]==‘一’：
        j=j.替换(J)[r],'1')
    如果 J[r]==‘零’：
        j=j.替换(J)[r],'0')
如果 伦(J)==4:
    Z=int(J)[0])*10+int(J)[1])+int(J)[2])+(int(J)[3])-1)
如果 伦(J)==3:
    Z=int(J)[0])*10+int(J)[1])+int(J)[2])
如果 伦(J)==2:
    Z=int(J)[0])*10
如果 伦(J)==1:
    Z=int(J)[0])

如果 f==‘增加’：
    x=x+y
如果 f==‘减少’：
    x=x-y
如果 i==‘增加’：
    x=x+z
如果 i==‘减少’：
    x=x-z
Q=x
A1=Q//1%10
A2=q//10%10
A3=Q//100%10
德夫 ABC(Q)：
    如果 q==10:
        回归 “十” 
    如果 q==9:
        回归 “九”
    如果 q==8:
        回归 “八”
    如果 q==7:
        回归 “七”
    如果 q==6:
        回归 “六”
    如果 q==5:
        回归 “五”
    如果 q==4:
        回归 “四”
    如果 q==3:
        回归 “三”
    如果 q==2:
        回归 “二”
    如果 q==1:
        回归 “一”
    如果 q==0:
        回归 “零”
W1=ABC(A1)
W2=ABC(A2)
如果 A2<2 和 A2！=0:
    R1=w2+w3
如果 A2>2 和 A1！=0:
    R1=w2+‘十’+W1
如果 A1==0:
    R1=w2+‘十’
如果 A2==0:
    R1=W1
打印(R1)
为 m 在……里面 范围(0，Len(S4))：
    如果 S4[m]==‘十’：
        S4=S4.替换(S4)[m],'10')
    如果 S4[m]==‘九’：
        S4=S4.替换(S4)[m],'9')
    如果 S4[m]==‘八’：
        S4=S4.替换(S4)[m],'8')
    如果 S4[m]==‘七’：
        S4=S4.替换(S4)[m],'7')
    如果 S4[m]==‘六’：
        S4=S4.替换(S4)[m],'6')
    如果 S4[m]==‘五’：
        S4=S4.替换(S4)[m],'5')
    如果 S4[m]==‘四’：
        S4=S4.替换(S4)[m],'4') 
    如果 S4[m]==‘三’：
        S4=S4.替换(S4)[m],'3')
    如果 S4[m]==‘二’：
        S4=S4.替换(S4)[m],'2')
    如果 S4[m]==‘一’：
        S4=S4.替换(S4)[m],'1')
    如果 S4[m]==‘零’：
        S4=S4.替换(S4)[m],'0')
如果 Len(S4)==4:
    n=int(S4)[0])*10+int(S4)[1])+INT(S4)[2])+(int(S4)[3])-1)
如果 Len(S4)==3:
    n=int(S4)[0])*10+int(S4)[1])+INT(S4)[2])
如果 Len(S4)==2:
    n=int(S4)[0])*10
如果 Len(S4)==1:
    n=int(S4)[0])

如果 x>n：
    打印(S7)[1：Len(S7)-1])
其他：
    打印(S10)[1：Len(S7)-1])
